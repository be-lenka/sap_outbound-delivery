<?php
/**
 * APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\OutboundDelivery
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Outbound Delivery (A2X)
 *
 * This service enables you to create, read, update and delete outbound deliveries. It can be consumed in Fiori apps and on other user interfaces.
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\OutboundDelivery\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemTypeTest Class Doc Comment
 *
 * @category    Class
 * @description APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemType
 * @package     BeLenka\SAP\OutboundDelivery
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemType"
     */
    public function testAPIOUTBOUNDDELIVERYSRVAOutbDeliveryItemType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "actual_delivered_qty_in_base_unit"
     */
    public function testPropertyActualDeliveredQtyInBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "actual_delivery_quantity"
     */
    public function testPropertyActualDeliveryQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_customer_group1"
     */
    public function testPropertyAdditionalCustomerGroup1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_customer_group2"
     */
    public function testPropertyAdditionalCustomerGroup2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_customer_group3"
     */
    public function testPropertyAdditionalCustomerGroup3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_customer_group4"
     */
    public function testPropertyAdditionalCustomerGroup4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_customer_group5"
     */
    public function testPropertyAdditionalCustomerGroup5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_material_group1"
     */
    public function testPropertyAdditionalMaterialGroup1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_material_group2"
     */
    public function testPropertyAdditionalMaterialGroup2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_material_group3"
     */
    public function testPropertyAdditionalMaterialGroup3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_material_group4"
     */
    public function testPropertyAdditionalMaterialGroup4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_material_group5"
     */
    public function testPropertyAdditionalMaterialGroup5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "alternate_product_number"
     */
    public function testPropertyAlternateProductNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_unit"
     */
    public function testPropertyBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "batch"
     */
    public function testPropertyBatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "batch_by_supplier"
     */
    public function testPropertyBatchBySupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "batch_classification"
     */
    public function testPropertyBatchClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bom_explosion"
     */
    public function testPropertyBomExplosion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_area"
     */
    public function testPropertyBusinessArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "consumption_posting"
     */
    public function testPropertyConsumptionPosting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "controlling_area"
     */
    public function testPropertyControllingArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cost_center"
     */
    public function testPropertyCostCenter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created_by_user"
     */
    public function testPropertyCreatedByUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creation_date"
     */
    public function testPropertyCreationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creation_time"
     */
    public function testPropertyCreationTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cust_engineering_chg_status"
     */
    public function testPropertyCustEngineeringChgStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_document"
     */
    public function testPropertyDeliveryDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_document_item"
     */
    public function testPropertyDeliveryDocumentItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_document_item_category"
     */
    public function testPropertyDeliveryDocumentItemCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_document_item_text"
     */
    public function testPropertyDeliveryDocumentItemText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_group"
     */
    public function testPropertyDeliveryGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_quantity_unit"
     */
    public function testPropertyDeliveryQuantityUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_related_billing_status"
     */
    public function testPropertyDeliveryRelatedBillingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_to_base_quantity_dnmntr"
     */
    public function testPropertyDeliveryToBaseQuantityDnmntr()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_to_base_quantity_nmrtr"
     */
    public function testPropertyDeliveryToBaseQuantityNmrtr()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_version"
     */
    public function testPropertyDeliveryVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "department_classification_by_cust"
     */
    public function testPropertyDepartmentClassificationByCust()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "distribution_channel"
     */
    public function testPropertyDistributionChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "division"
     */
    public function testPropertyDivision()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eu_delivery_item_arc_status"
     */
    public function testPropertyEuDeliveryItemArcStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fixed_shipg_procg_duration_in_days"
     */
    public function testPropertyFixedShipgProcgDurationInDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gl_account"
     */
    public function testPropertyGlAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_movement_reason_code"
     */
    public function testPropertyGoodsMovementReasonCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_movement_status"
     */
    public function testPropertyGoodsMovementStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_movement_type"
     */
    public function testPropertyGoodsMovementType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "higher_lvl_itm_of_bat_splt_itm"
     */
    public function testPropertyHigherLvlItmOfBatSpltItm()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "higher_level_item"
     */
    public function testPropertyHigherLevelItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inspection_lot"
     */
    public function testPropertyInspectionLot()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inspection_partial_lot"
     */
    public function testPropertyInspectionPartialLot()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "intercompany_billing_status"
     */
    public function testPropertyIntercompanyBillingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_article_number"
     */
    public function testPropertyInternationalArticleNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inventory_special_stock_type"
     */
    public function testPropertyInventorySpecialStockType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inventory_valuation_type"
     */
    public function testPropertyInventoryValuationType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_completely_delivered"
     */
    public function testPropertyIsCompletelyDelivered()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_not_goods_movements_relevant"
     */
    public function testPropertyIsNotGoodsMovementsRelevant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_separate_valuation"
     */
    public function testPropertyIsSeparateValuation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issg_or_rcvg_batch"
     */
    public function testPropertyIssgOrRcvgBatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issg_or_rcvg_material"
     */
    public function testPropertyIssgOrRcvgMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issg_or_rcvg_spcl_stock_ind"
     */
    public function testPropertyIssgOrRcvgSpclStockInd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issg_or_rcvg_stock_category"
     */
    public function testPropertyIssgOrRcvgStockCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issg_or_rcvg_valuation_type"
     */
    public function testPropertyIssgOrRcvgValuationType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issuing_or_receiving_plant"
     */
    public function testPropertyIssuingOrReceivingPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issuing_or_receiving_storage_loc"
     */
    public function testPropertyIssuingOrReceivingStorageLoc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_billing_block_reason"
     */
    public function testPropertyItemBillingBlockReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_billing_incompletion_status"
     */
    public function testPropertyItemBillingIncompletionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_delivery_incompletion_status"
     */
    public function testPropertyItemDeliveryIncompletionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_gds_mvt_incompletion_sts"
     */
    public function testPropertyItemGdsMvtIncompletionSts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_general_incompletion_status"
     */
    public function testPropertyItemGeneralIncompletionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_gross_weight"
     */
    public function testPropertyItemGrossWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_is_billing_relevant"
     */
    public function testPropertyItemIsBillingRelevant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_net_weight"
     */
    public function testPropertyItemNetWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_packing_incompletion_status"
     */
    public function testPropertyItemPackingIncompletionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_picking_incompletion_status"
     */
    public function testPropertyItemPickingIncompletionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_volume"
     */
    public function testPropertyItemVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_volume_unit"
     */
    public function testPropertyItemVolumeUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_weight_unit"
     */
    public function testPropertyItemWeightUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_change_date"
     */
    public function testPropertyLastChangeDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "loading_group"
     */
    public function testPropertyLoadingGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manufacture_date"
     */
    public function testPropertyManufactureDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material"
     */
    public function testPropertyMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_by_customer"
     */
    public function testPropertyMaterialByCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_freight_group"
     */
    public function testPropertyMaterialFreightGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_group"
     */
    public function testPropertyMaterialGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_is_batch_managed"
     */
    public function testPropertyMaterialIsBatchManaged()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_is_int_batch_managed"
     */
    public function testPropertyMaterialIsIntBatchManaged()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "number_of_serial_numbers"
     */
    public function testPropertyNumberOfSerialNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_id"
     */
    public function testPropertyOrderId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_item"
     */
    public function testPropertyOrderItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "original_delivery_quantity"
     */
    public function testPropertyOriginalDeliveryQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "originally_requested_material"
     */
    public function testPropertyOriginallyRequestedMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overdeliv_tolrtd_lmt_ratio_in_pct"
     */
    public function testPropertyOverdelivTolrtdLmtRatioInPct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "packing_status"
     */
    public function testPropertyPackingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "partial_delivery_is_allowed"
     */
    public function testPropertyPartialDeliveryIsAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_guarantee_form"
     */
    public function testPropertyPaymentGuaranteeForm()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "picking_confirmation_status"
     */
    public function testPropertyPickingConfirmationStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "picking_control"
     */
    public function testPropertyPickingControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "picking_status"
     */
    public function testPropertyPickingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plant"
     */
    public function testPropertyPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "primary_posting_switch"
     */
    public function testPropertyPrimaryPostingSwitch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_availability_date"
     */
    public function testPropertyProductAvailabilityDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_availability_time"
     */
    public function testPropertyProductAvailabilityTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_configuration"
     */
    public function testPropertyProductConfiguration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_hierarchy_node"
     */
    public function testPropertyProductHierarchyNode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "profitability_segment"
     */
    public function testPropertyProfitabilitySegment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "profit_center"
     */
    public function testPropertyProfitCenter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "proof_of_delivery_relevance_code"
     */
    public function testPropertyProofOfDeliveryRelevanceCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "proof_of_delivery_status"
     */
    public function testPropertyProofOfDeliveryStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quantity_is_fixed"
     */
    public function testPropertyQuantityIsFixed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "receiving_point"
     */
    public function testPropertyReceivingPoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_document_logical_system"
     */
    public function testPropertyReferenceDocumentLogicalSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_sd_document"
     */
    public function testPropertyReferenceSdDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_sd_document_category"
     */
    public function testPropertyReferenceSdDocumentCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_sd_document_item"
     */
    public function testPropertyReferenceSdDocumentItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "retail_promotion"
     */
    public function testPropertyRetailPromotion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_document_item_type"
     */
    public function testPropertySalesDocumentItemType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_group"
     */
    public function testPropertySalesGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_office"
     */
    public function testPropertySalesOffice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sd_document_category"
     */
    public function testPropertySdDocumentCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sd_process_status"
     */
    public function testPropertySdProcessStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shelf_life_expiration_date"
     */
    public function testPropertyShelfLifeExpirationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "statistics_date"
     */
    public function testPropertyStatisticsDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "stock_type"
     */
    public function testPropertyStockType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storage_bin"
     */
    public function testPropertyStorageBin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storage_location"
     */
    public function testPropertyStorageLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storage_type"
     */
    public function testPropertyStorageType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subsequent_movement_type"
     */
    public function testPropertySubsequentMovementType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transportation_group"
     */
    public function testPropertyTransportationGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "underdeliv_tolrtd_lmt_ratio_in_pct"
     */
    public function testPropertyUnderdelivTolrtdLmtRatioInPct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unlimited_overdelivery_is_allowed"
     */
    public function testPropertyUnlimitedOverdeliveryIsAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "varbl_shipg_procg_duration_in_days"
     */
    public function testPropertyVarblShipgProcgDurationInDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warehouse"
     */
    public function testPropertyWarehouse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warehouse_activity_status"
     */
    public function testPropertyWarehouseActivityStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warehouse_staging_area"
     */
    public function testPropertyWarehouseStagingArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warehouse_stock_category"
     */
    public function testPropertyWarehouseStockCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warehouse_storage_bin"
     */
    public function testPropertyWarehouseStorageBin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_serial_delivery_item"
     */
    public function testPropertyToSerialDeliveryItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_document_flow"
     */
    public function testPropertyToDocumentFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_handling_unit_item_delivery"
     */
    public function testPropertyToHandlingUnitItemDelivery()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_delivery_document_item_text"
     */
    public function testPropertyToDeliveryDocumentItemText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
