<?php
/**
 * APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemTypeCreateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\OutboundDelivery
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Outbound Delivery (A2X)
 *
 * This service enables you to create, read, update and delete outbound deliveries. It can be consumed in Fiori apps and on other user interfaces.
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\OutboundDelivery\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemTypeCreateTest Class Doc Comment
 *
 * @category    Class
 * @description APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemTypeCreate
 * @package     BeLenka\SAP\OutboundDelivery
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemTypeCreateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIOUTBOUNDDELIVERYSRVAOutbDeliveryItemTypeCreate"
     */
    public function testAPIOUTBOUNDDELIVERYSRVAOutbDeliveryItemTypeCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "actual_delivered_qty_in_base_unit"
     */
    public function testPropertyActualDeliveredQtyInBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "actual_delivery_quantity"
     */
    public function testPropertyActualDeliveryQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "batch"
     */
    public function testPropertyBatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_document"
     */
    public function testPropertyDeliveryDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_document_item_text"
     */
    public function testPropertyDeliveryDocumentItemText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_quantity_unit"
     */
    public function testPropertyDeliveryQuantityUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eu_delivery_item_arc_status"
     */
    public function testPropertyEuDeliveryItemArcStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inventory_valuation_type"
     */
    public function testPropertyInventoryValuationType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_gross_weight"
     */
    public function testPropertyItemGrossWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_net_weight"
     */
    public function testPropertyItemNetWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_volume"
     */
    public function testPropertyItemVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_volume_unit"
     */
    public function testPropertyItemVolumeUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_weight_unit"
     */
    public function testPropertyItemWeightUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manufacture_date"
     */
    public function testPropertyManufactureDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_by_customer"
     */
    public function testPropertyMaterialByCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_sd_document"
     */
    public function testPropertyReferenceSdDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_sd_document_item"
     */
    public function testPropertyReferenceSdDocumentItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shelf_life_expiration_date"
     */
    public function testPropertyShelfLifeExpirationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storage_location"
     */
    public function testPropertyStorageLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_serial_delivery_item"
     */
    public function testPropertyToSerialDeliveryItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_document_flow"
     */
    public function testPropertyToDocumentFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_handling_unit_item_delivery"
     */
    public function testPropertyToHandlingUnitItemDelivery()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_delivery_document_item_text"
     */
    public function testPropertyToDeliveryDocumentItemText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
