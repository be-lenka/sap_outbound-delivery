<?php
/**
 * APIOUTBOUNDDELIVERYSRVAOutbDeliveryDocFlowTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\OutboundDelivery
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Outbound Delivery (A2X)
 *
 * This service enables you to create, read, update and delete outbound deliveries. It can be consumed in Fiori apps and on other user interfaces.
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\OutboundDelivery\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIOUTBOUNDDELIVERYSRVAOutbDeliveryDocFlowTypeTest Class Doc Comment
 *
 * @category    Class
 * @description APIOUTBOUNDDELIVERYSRVAOutbDeliveryDocFlowType
 * @package     BeLenka\SAP\OutboundDelivery
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIOUTBOUNDDELIVERYSRVAOutbDeliveryDocFlowTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIOUTBOUNDDELIVERYSRVAOutbDeliveryDocFlowType"
     */
    public function testAPIOUTBOUNDDELIVERYSRVAOutbDeliveryDocFlowType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deliveryversion"
     */
    public function testPropertyDeliveryversion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preceding_document"
     */
    public function testPropertyPrecedingDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preceding_document_category"
     */
    public function testPropertyPrecedingDocumentCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preceding_document_item"
     */
    public function testPropertyPrecedingDocumentItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subsequentdocument"
     */
    public function testPropertySubsequentdocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quantity_in_base_unit"
     */
    public function testPropertyQuantityInBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subsequent_document_item"
     */
    public function testPropertySubsequentDocumentItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sd_fulfillment_calculation_rule"
     */
    public function testPropertySdFulfillmentCalculationRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subsequent_document_category"
     */
    public function testPropertySubsequentDocumentCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transfer_order_in_wrhs_mgmt_is_confd"
     */
    public function testPropertyTransferOrderInWrhsMgmtIsConfd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
