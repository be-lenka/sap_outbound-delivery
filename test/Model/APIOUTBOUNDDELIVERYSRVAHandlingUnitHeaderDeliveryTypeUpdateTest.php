<?php
/**
 * APIOUTBOUNDDELIVERYSRVAHandlingUnitHeaderDeliveryTypeUpdateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\OutboundDelivery
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Outbound Delivery (A2X)
 *
 * This service enables you to create, read, update and delete outbound deliveries. It can be consumed in Fiori apps and on other user interfaces.
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\OutboundDelivery\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIOUTBOUNDDELIVERYSRVAHandlingUnitHeaderDeliveryTypeUpdateTest Class Doc Comment
 *
 * @category    Class
 * @description APIOUTBOUNDDELIVERYSRVAHandlingUnitHeaderDeliveryTypeUpdate
 * @package     BeLenka\SAP\OutboundDelivery
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIOUTBOUNDDELIVERYSRVAHandlingUnitHeaderDeliveryTypeUpdateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIOUTBOUNDDELIVERYSRVAHandlingUnitHeaderDeliveryTypeUpdate"
     */
    public function testAPIOUTBOUNDDELIVERYSRVAHandlingUnitHeaderDeliveryTypeUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_document"
     */
    public function testPropertyDeliveryDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gross_volume"
     */
    public function testPropertyGrossVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gross_weight"
     */
    public function testPropertyGrossWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_base_unit_of_measure"
     */
    public function testPropertyHandlingUnitBaseUnitOfMeasure()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_content_description"
     */
    public function testPropertyHandlingUnitContentDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_external_id"
     */
    public function testPropertyHandlingUnitExternalId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_height"
     */
    public function testPropertyHandlingUnitHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_length"
     */
    public function testPropertyHandlingUnitLength()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_max_volume"
     */
    public function testPropertyHandlingUnitMaxVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_max_weight"
     */
    public function testPropertyHandlingUnitMaxWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_net_volume"
     */
    public function testPropertyHandlingUnitNetVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_second_external_id"
     */
    public function testPropertyHandlingUnitSecondExternalId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_tare_volume"
     */
    public function testPropertyHandlingUnitTareVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_tare_volume_unit"
     */
    public function testPropertyHandlingUnitTareVolumeUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_tare_weight"
     */
    public function testPropertyHandlingUnitTareWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_tare_weight_unit"
     */
    public function testPropertyHandlingUnitTareWeightUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_uo_m_dimension"
     */
    public function testPropertyHandlingUnitUoMDimension()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_width"
     */
    public function testPropertyHandlingUnitWidth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "net_weight"
     */
    public function testPropertyNetWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "packaging_material"
     */
    public function testPropertyPackagingMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "volume_unit"
     */
    public function testPropertyVolumeUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "weight_unit"
     */
    public function testPropertyWeightUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
